AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"

Parameters:
  NotificationEmail:
    Type: String
  ThirdPartyUrl:
    Type: String

Globals: 
  Function:
    Tracing: Active
  Api:
    TracingEnabled: true

Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  SaveHelloFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: handler.saveHello
      Runtime: nodejs14.x
      Environment:
          Variables:
            TABLE_NAME: ExampleTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: ExampleTable
      Events:
        HelloAPI:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /hello
            Method: POST
  GetHelloFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: handler.getHello
      Runtime: nodejs14.x
      Environment:
          Variables:
            TABLE_NAME: ExampleTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: ExampleTable
      Events:
        HelloAPI:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /hello
            Method: GET
  SendToThirdPartyFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: xrayHandler.sendTo3rdParty
      Runtime: nodejs14.x
      Environment:
          Variables:
            TABLE_NAME: ExampleTable
            THIRD_PARTY_URL: !Ref ThirdPartyUrl
      Policies:
        - DynamoDBCrudPolicy:
            TableName: ExampleTable
      Events:
        HelloAPI:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /call
            Method: GET

  ExampleTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: "name"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "name"
          KeyType: "HASH"
      BillingMode: "PAY_PER_REQUEST"
      TableName: "ExampleTable"

  AlarmTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Protocol: email
        Endpoint: !Ref NotificationEmail

  Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: "Alarm that gets trigger when there are 1 API Gateway error in 1 minute"
      Namespace: "AWS/ApiGateway"
      MetricName: "5XXError"
      Period: 60
      Statistic: Sum
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref AlarmTopic
      Dimensions:
        - Name: ApiName
          Value: !Sub ${AWS::StackName}

Outputs:
  ApiUrl:
    Description: "API endpoint URL for Prod environment"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/dev/"
